{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Image Classification using Machine Learning Techniques\n",
    "*By JarredR*  \n",
    "This project will use the [ImageWoof dataset](https://github.com/fastai/imagenette#imagewoof), which is made up of 12,000 images of dogs divided into 10 classes (breeds). The goal is to classify images of dogs into the correct class with the accuracy metric being the measure of performance. To achieve this goal, a variety of conventional machine learning and deep learning techniques will be compared. The same techniques from this project were used in the major project, which instead used the CelebA dataset and the classfication task was hair colour prediction. The results will be compared this project and the major project throughout this notebook, particually in the discussion section.\n",
    "\n",
    "\n",
    "## Notebook Outline\n",
    "* **Data Preprocessing:** In this section the data is preprocessed for use in the later experiments.\n",
    "* **Data Exploration:** In this section the distribution of the dataset is explored and individual images visualised.\n",
    "* **Conventional Machine Learning:** In this section, some conventional machine learning models are trained and evaluated as baseline results.\n",
    "* **Deep Learning:** In this section, some deep learning models are trained and evaluated, with their results compared to those of conventional techniques.\n",
    "* **Larger Data:** In this section, the effect of using larger training images, with 224 \\* 224 pixels instead of 48 \\* 48, are explored and compared with the previous deep learning results.\n",
    "* **Transfer Learning:** In this section, transfer learning is tested and compared with the deep learning results.\n",
    "* **Discussion:** In this section, the results are discussed and compared with the major project.\n",
    "\n",
    "# Data Preprocessing\n",
    "In this section, the data is loaded in from disk and preprocessed for use in sklearn conventional machine learning models and Keras deep learning models.  \n",
    "The preprocessing includes:\n",
    "* Loading from disk the ImageWoof data which has already been split into train and test sets.\n",
    "* The values in the data are normalized as floats between 0 and 1."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "%matplotlib inline\n",
    "\n",
    "import glob\n",
    "import numpy as np\n",
    "from sklearn.preprocessing import LabelBinarizer, LabelEncoder\n",
    "from sklearn.linear_model import LogisticRegression, SGDClassifier\n",
    "import keras\n",
    "from keras.layers import Dropout, Flatten, Convolution2D, ZeroPadding2D, MaxPooling2D, Dense, GlobalAveragePooling2D, \\\n",
    "    Activation\n",
    "from keras.models import Sequential, Model\n",
    "from keras.preprocessing import image\n",
    "import matplotlib.pyplot as plt\n",
    "from matplotlib.pyplot import imshow\n",
    "from PIL import Image"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "def data_loader(base_path, for_sklearn, img_dim, num_classes):\n",
    "    \"\"\"Loads the train and test sets of the Imagewoof dataset\n",
    "\n",
    "    Args:\n",
    "        base_path: A string providing the base path for the dataset\n",
    "        for_sklearn: A boolean for whether to format the data for sklearn models\n",
    "        img_dim: Number of dimensions in the image\n",
    "        num_classes: The number of classes (breeds) to use\n",
    "    Returns:\n",
    "        Numpy arrays for the train and test sets plus the classes of the label encoder\n",
    "    \"\"\"\n",
    "\n",
    "    def flatten_data(data):\n",
    "        \"\"\"Flattens the dimensions of the data for sklearn models\n",
    "\n",
    "        Args:\n",
    "            data: A multi-dimensional numpy array of image pixels to be flattened\n",
    "\n",
    "        Returns:\n",
    "            Data reshaped into one dimension\n",
    "        \"\"\"\n",
    "        samples, dim1, dim2, alpha = data.shape\n",
    "        data = data.reshape(samples, dim1 * dim2 * alpha)\n",
    "        return data\n",
    "\n",
    "    def load_image(image_path):\n",
    "        \"\"\"Loads an image from file and scales it\n",
    "\n",
    "        Args:\n",
    "            image_path: The path of the image on disk\n",
    "\n",
    "        Returns:\n",
    "            A numpy array of pixel values representing the image\n",
    "        \"\"\"\n",
    "        img = image.load_img(image_path, grayscale=False, target_size=(img_dim, img_dim))\n",
    "        x = image.img_to_array(img, dtype='float32')\n",
    "        return x\n",
    "\n",
    "    def load_dataset(breed_paths):\n",
    "        \"\"\"Loads all the images in a directory and normalizes them\n",
    "\n",
    "        Args:\n",
    "            breed_paths: A list of paths to the directories of each dog breed\n",
    "\n",
    "        Returns:\n",
    "            A numpy array of images in the dataset and a list of labels of the images in x\n",
    "        \"\"\"\n",
    "        x = []\n",
    "        y = []\n",
    "        for i in range(num_classes):\n",
    "            breed = breed_paths[i]\n",
    "            breed_class = breed[-9:]\n",
    "            image_paths = glob.glob(breed + '/*')\n",
    "            for image_path in image_paths:\n",
    "                x.append(load_image(image_path))\n",
    "                y.append(breed_class)\n",
    "        x = np.array(x)\n",
    "        x /= 255\n",
    "        return x, y\n",
    "\n",
    "    print('Loading data...')\n",
    "    train_paths = glob.glob(base_path + '/train/*')\n",
    "    test_paths = glob.glob(base_path + '/val/*')\n",
    "    x_train, y_train = load_dataset(train_paths)\n",
    "    x_test, y_test = load_dataset(test_paths)\n",
    "    if for_sklearn:\n",
    "        x_train = flatten_data(x_train)\n",
    "        x_test = flatten_data(x_test)\n",
    "        encoder = LabelEncoder()\n",
    "    else:\n",
    "        encoder = LabelBinarizer()\n",
    "    y_train = encoder.fit_transform(y_train)\n",
    "    y_test = encoder.transform(y_test)\n",
    "    print('Finished loading data')\n",
    "    return x_train, y_train, x_test, y_test, encoder.classes_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Loading data...\n",
      "Finished loading data\n"
     ]
    }
   ],
   "source": [
    "img_dim = 48\n",
    "num_classes = 10\n",
    "x_train, y_train, x_test, y_test, encoder_classes = data_loader('./data/imagewoof', for_sklearn=False,\n",
    "                                                                img_dim=img_dim, num_classes=num_classes)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Data Exploration\n",
    "## Class Distribution\n",
    "\n",
    "It's important to know the distribution of the classes to judge the accuracy of the models correctly. For example, if one class made up 90% of the images in the train and test sets, a high accuracy could be achieved simply by always guessing the correct class. Models trained on unbalanced data are also not likely to perform as well on data matching other classes."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "imagenet_classes = {\n",
    "        'n02115641': 'Dingo',\n",
    "        'n02111889': 'Samoyed',\n",
    "        'n02105641': 'Old English Sheepdog',\n",
    "        'n02099601': 'Golden Retriever',\n",
    "        'n02096294': 'Australian Terrier',\n",
    "        'n02093754': 'Border Terrier',\n",
    "        'n02089973': 'English Foxhound',\n",
    "        'n02088364': 'Beagle',\n",
    "        'n02087394': 'Rhodesian Ridgeback',\n",
    "        'n02086240': 'Shih-Tzu'\n",
    "    }\n",
    "\n",
    "\n",
    "def get_class(prediction, classes):\n",
    "    \"\"\"Gets the class name of a prediction or label\n",
    "\n",
    "    Args:\n",
    "        prediction: A one-hot numpy array\n",
    "        classes: the classes from the encoder\n",
    "\n",
    "    Returns:\n",
    "        The English name of the prediction or label\n",
    "    \"\"\"\n",
    "    return imagenet_classes[classes[np.argmax(prediction)]]\n",
    "\n",
    "\n",
    "def class_distribution(labels, classes):\n",
    "    \"\"\"Prints the distribution of classes in a dataset\n",
    "    \n",
    "    Args:\n",
    "        labels: the true labels for the data\n",
    "        classes: the classes from the encoder\n",
    "        \n",
    "    Returns:\n",
    "        Nothing\n",
    "    \"\"\"\n",
    "    label_counts = {}\n",
    "    for label in labels:\n",
    "        class_name = get_class(label, classes)\n",
    "        if class_name in label_counts:\n",
    "            label_counts[class_name] += 1\n",
    "        else:\n",
    "            label_counts[class_name] = 1\n",
    "    \n",
    "    for dog_breed, count in label_counts.items():\n",
    "        print(f'{dog_breed}: {count}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train distribution:\n",
      "English Foxhound: 580\n",
      "Shih-Tzu: 941\n",
      "Old English Sheepdog: 928\n",
      "Border Terrier: 949\n",
      "Beagle: 932\n",
      "Rhodesian Ridgeback: 942\n",
      "Australian Terrier: 943\n",
      "Samoyed: 921\n",
      "Dingo: 940\n",
      "Golden Retriever: 949\n",
      "\n",
      "Test distribution:\n",
      "English Foxhound: 224\n",
      "Shih-Tzu: 409\n",
      "Old English Sheepdog: 422\n",
      "Border Terrier: 401\n",
      "Beagle: 418\n",
      "Rhodesian Ridgeback: 408\n",
      "Australian Terrier: 407\n",
      "Samoyed: 429\n",
      "Dingo: 410\n",
      "Golden Retriever: 401\n"
     ]
    }
   ],
   "source": [
    "print('Train distribution:')\n",
    "class_distribution(y_train, encoder_classes)\n",
    "print('\\nTest distribution:')\n",
    "class_distribution(y_test, encoder_classes)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Distribution Results\n",
    "\n",
    "From the distribution analysis we can see that all the classes except the English Foxhound have approximately equal numbers of instances. The English foxhound has about 60% the amount of the other classes which is fine in this instance. This dataset is quite well balanced."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Visualising Images\n",
    "\n",
    "Visualising some of the images in the dataset will give us a feel for what our models will be working with and ensure we've encoded the images in the correct way."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "def display_image(img):\n",
    "    \"\"\"Displays an array of pixels as an image\n",
    "\n",
    "    Args:\n",
    "        img: an array of pixels\n",
    "    \"\"\"\n",
    "    restored_img = img * 255\n",
    "    pil_img = Image.fromarray(restored_img.astype(np.uint8))\n",
    "    plt.axis('off')\n",
    "    plt.imshow(pil_img)\n",
    "\n",
    "    \n",
    "def plot_image(img, label):\n",
    "    print(get_class(label, encoder_classes))\n",
    "    display_image(img)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "English Foxhound\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_image(x_train[0], y_train[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Shih-Tzu\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_image(x_train[1000], y_train[1000])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Old English Sheepdog\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_image(x_train[2000], y_train[2000])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Visualisation Results\n",
    "\n",
    "As we can see, the images are not just close up portraits of the dogs which are facing the camera. This dataset is quite messy and there's often people and other objects in the images. This means that it is quite unlikely models will be getting perfect accuracy on the test set. The images are quite pixelated at 48 * 48, and therefore humans may have difficulty identifying the breed, but images of this size will be suited to small to medium models."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Conventional Machine Learning\n",
    "Many conventional machine learning techniques are not suitable for the high dimensionality of image data. For example, images of size 224 * 224 have 150,528 dimensions when the RGB channels are factored in. The decision trees and k-nearest neighbors algorithms are particually not suitable because they work best with a small number of features which are highly relevant to classification. The only suitable options are logistic regression and support vector machines classifiers.\n",
    "\n",
    "SKlearn models only allow for one dimesional input, so the images have to be preprocessed differently than from the keras models in later sections.\n",
    "\n",
    "## First Attempt\n",
    "To demonstrate how conventional machine learning approaches struggle with high dimensional data, images of size 224 * 224 will be used first. This experiment is likely to yeild poor results."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "def evaluate_model(model, x_train, y_train, x_test, y_test):\n",
    "    \"\"\"Trains a model and prints the train and test accuracy.\n",
    "\n",
    "    Args:\n",
    "        model: an sklearn model to be trained and evaluated\n",
    "        x_train: train set of images\n",
    "        y_train: labels of train set\n",
    "        x_test: test set of images\n",
    "        y_test: labels of test set\n",
    "\n",
    "    Returns:\n",
    "        The trained model\n",
    "    \"\"\"\n",
    "    print('Training model...')\n",
    "    model.fit(x_train, y_train)\n",
    "    print('Evaluating model...')\n",
    "    print(f'Train accuracy: {model.score(x_train, y_train)}')\n",
    "    print(f'Test accuracy: {model.score(x_test, y_test)}')\n",
    "    return model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "img_dim = 224\n",
    "num_classes = 10\n",
    "\n",
    "sx_train, sy_train, sx_test, sy_test, encoder_classes = data_loader('./data/imagewoof', for_sklearn=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "lr_model = LogisticRegression(max_iter=100)\n",
    "\n",
    "print('Logistic Regression:')\n",
    "evaluate_model(lr_model, x_train, y_train, x_test, y_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Training model...  \n",
    "Evaluating model...  \n",
    "Train accuracy: 0.545  \n",
    "Test accuracy: 0.252"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "svm_model = SGDClassifier()\n",
    "\n",
    "print('SVM:')\n",
    "evaluate_model(svm_model,  x_train,y_train, x_test, y_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Training model...  \n",
    "Evaluating model...  \n",
    "Train accuracy: 0.865  \n",
    "Test accuracy: 0.203"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### First Attempt Results\n",
    "\n",
    "The 10 class classification has a random chance accuracy 0.1, so the models are learning something but the performance is very poor. The huge gap between the train and test accuracies demonstrate that the models are not generalising to new data well. The SVM model also has a huge 66% gap between the train and test accuracy which indicates it is very poor at generalising to new data and has overfit.\n",
    "\n",
    "## Second Attempt\n",
    "For the next experiment, the size of the images will be brought down to 48x48 and the number of classes to 4 to make the task more comparable to that of the major project. The expecation is that the accuracy result will be significantly higher than the first attempt."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "img_dim = 48\n",
    "num_classes = 4\n",
    "\n",
    "sx_train, sy_train, sx_test, sy_test, encoder_classes = data_loader('./data/imagewoof', for_sklearn=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [],
   "source": [
    "lr_model = LogisticRegression(max_iter=100)\n",
    "\n",
    "print('Logistic Regression:')\n",
    "evaluate_model(lr_model)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Training model...  \n",
    "Evaluating model...  \n",
    "Train accuracy: 0.813  \n",
    "Test accuracy: 0.492"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "svm_model = SGDClassifier()\n",
    "\n",
    "print('SVM:')\n",
    "evaluate_model(svm_model)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Training model...  \n",
    "Evaluating model...  \n",
    "Train accuracy: 0.906  \n",
    "Test accuracy: 0.463"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Second Attempt Results\n",
    "\n",
    "There's a definite improvement in the test accuracy for both the logisitic regression and svm models, however there's a large gap between the train and test accuracy which indicates that the models are overfitting to the training data and not generalising well. The fact that the accuracy is still below 0.5 indicates that the classification of the dog breeds is more difficult than the hair colour classification task in the major project. From the visualisation of a few of the images in the dataset earlier, it makes sense that these models would perform worse on this task than on hair colour classification as humans may also struggle with it."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Deep Learning\n",
    "Deep learning is much better suited for image datasets and is therefore likely to achieve superior results than conventional machine learning.\n",
    "\n",
    "## cnn Model\n",
    "This model has four convolutional layers, split into two groups, with a max pooling layer after each group. It has two dropout layers to prevent overfitting, and a single dense layer of size 128 with a ReLU activation, before the softmax classification layer at the end. The architecture is inspired by that of VGG Face, but with only a quarter of the layers. This model performed very well in the major project on the hair colour classification task."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [],
   "source": [
    "def cnn(x_train, y_train, x_test, y_test, epochs, img_dim, num_classes):\n",
    "    cnn_model = Sequential()\n",
    "    cnn_model.add(ZeroPadding2D((1, 1), input_shape=(img_dim, img_dim, 3)))\n",
    "    cnn_model.add(Convolution2D(32, (3, 3), activation='relu'))\n",
    "    cnn_model.add(ZeroPadding2D((1, 1)))\n",
    "    cnn_model.add(Convolution2D(32, (3, 3), activation='relu'))\n",
    "    cnn_model.add(MaxPooling2D(pool_size=(2, 2)))\n",
    "\n",
    "    cnn_model.add(ZeroPadding2D((1, 1)))\n",
    "    cnn_model.add(Convolution2D(64, (3, 3), activation='relu'))\n",
    "    cnn_model.add(ZeroPadding2D((1, 1)))\n",
    "    cnn_model.add(Convolution2D(64, (3, 3), activation='relu'))\n",
    "    cnn_model.add(MaxPooling2D(pool_size=(2, 2)))\n",
    "\n",
    "    cnn_model.add(Dropout(0.5))\n",
    "    cnn_model.add(Flatten())\n",
    "    cnn_model.add(Dense(128, activation='relu'))\n",
    "    cnn_model.add(Dropout(0.5))\n",
    "    cnn_model.add(Dense(num_classes, activation='softmax'))\n",
    "\n",
    "    cnn_model.compile(loss='categorical_crossentropy',\n",
    "                      optimizer=keras.optimizers.Adam(),\n",
    "                      metrics=['accuracy']\n",
    "                      )\n",
    "\n",
    "    cnn_model.fit(x_train, y_train, epochs=epochs, batch_size=256)\n",
    "    score = cnn_model.evaluate(x_test, y_test, verbose=0)\n",
    "    print('Test loss:', score[0])\n",
    "    print('Test accuracy:', score[1])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### large_cnn Model\n",
    "This model is based off cnn, but with an extra block of two convolutional layers to bring the total to 6. This model adds a third dropout layer to try to reduce overfitting, and an additional dense layer with ReLU activation. This model will take longer to train than cnn due to the extra layers: will this training lead to an improvement in performance or overfitting to the training data? We shall find out.\n",
    "This model performed the best in the major project on the hair colour classification task."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [],
   "source": [
    "def large_cnn(x_train, y_train, x_test, y_test, epochs, img_dim, num_classes):\n",
    "    cnn_model = Sequential()\n",
    "    cnn_model.add(ZeroPadding2D((1, 1), input_shape=(img_dim, img_dim, 3)))\n",
    "    cnn_model.add(Convolution2D(32, (3, 3), activation='relu'))\n",
    "    cnn_model.add(ZeroPadding2D((1, 1)))\n",
    "    cnn_model.add(Convolution2D(32, (3, 3), activation='relu'))\n",
    "    cnn_model.add(MaxPooling2D(pool_size=(2, 2)))\n",
    "\n",
    "    cnn_model.add(ZeroPadding2D((1, 1)))\n",
    "    cnn_model.add(Convolution2D(64, (3, 3), activation='relu'))\n",
    "    cnn_model.add(ZeroPadding2D((1, 1)))\n",
    "    cnn_model.add(Convolution2D(64, (3, 3), activation='relu'))\n",
    "    cnn_model.add(MaxPooling2D(pool_size=(2, 2)))\n",
    "\n",
    "    cnn_model.add(ZeroPadding2D((1, 1)))\n",
    "    cnn_model.add(Convolution2D(128, (3, 3), activation='relu'))\n",
    "    cnn_model.add(ZeroPadding2D((1, 1)))\n",
    "    cnn_model.add(Convolution2D(128, (3, 3), activation='relu'))\n",
    "    cnn_model.add(MaxPooling2D(pool_size=(2, 2)))\n",
    "\n",
    "    cnn_model.add(Dropout(0.5))\n",
    "    cnn_model.add(Flatten())\n",
    "    cnn_model.add(Dense(256, activation='relu'))\n",
    "    cnn_model.add(Dropout(0.5))\n",
    "    cnn_model.add(Dense(128, activation='relu'))\n",
    "    cnn_model.add(Dropout(0.5))\n",
    "    cnn_model.add(Dense(num_classes, activation='softmax'))\n",
    "\n",
    "    cnn_model.compile(loss='categorical_crossentropy',\n",
    "                      optimizer=keras.optimizers.Adam(),\n",
    "                      metrics=['accuracy']\n",
    "                      )\n",
    "\n",
    "    cnn_model.fit(x_train, y_train, epochs=epochs, batch_size=256)\n",
    "    score = cnn_model.evaluate(x_test, y_test, verbose=0)\n",
    "    print('Test loss:', score[0])\n",
    "    print('Test accuracy:', score[1])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 4 Class Classification Experiments"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [],
   "source": [
    "img_dim = 48\n",
    "num_classes = 4\n",
    "epochs = 50\n",
    "x_train, y_train, x_test, y_test, encoder_classes = data_loader('./data/imagewoof', for_sklearn=False, \n",
    "                                                                img_dim=img_dim, num_classes=num_classes)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [],
   "source": [
    "cnn(x_train, y_train, x_test, y_test, epochs=epochs, img_dim=img_dim, num_classes=num_classes)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Training model...  \n",
    "Train loss: 0.144  \n",
    "Train accuracy: 0.984  \n",
    "Test loss: 1.28  \n",
    "Test accuracy: 0.693"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [],
   "source": [
    "large_cnn(x_train, y_train, x_test, y_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Training model...  \n",
    "Train loss: 0.1831  \n",
    "Train accuracy: 0.9357  \n",
    "Test loss: 1.13  \n",
    "Test accuracy: 0.722"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 10 Class Classification Experiments"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [],
   "source": [
    "img_dim = 48\n",
    "num_classes = 10\n",
    "epochs = 50\n",
    "x_train, y_train, x_test, y_test, encoder_classes = data_loader('./data/imagewoof', for_sklearn=False, \n",
    "                                                                img_dim=img_dim, num_classes=num_classes)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [],
   "source": [
    "cnn(x_train, y_train, x_test, y_test, epochs=epochs, img_dim=img_dim, num_classes=num_classes)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Training model...  \n",
    "Train loss: 0.611  \n",
    "Train accuracy: 0.783  \n",
    "Test loss: 1.86  \n",
    "Test accuracy: 0.453"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [],
   "source": [
    "large_cnn(x_train, y_train, x_test, y_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Training model...  \n",
    "Train loss: 0.499  \n",
    "Train accuracy: 0.826  \n",
    "Test loss: 1.86  \n",
    "Test accuracy: 0.507"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Results\n",
    "The deep learning models performed significantly better than the conventional machine learning approaches. Using large_cnn for 4 class classification, accuracy improved by 22% over logistic regression, while 10 class classification accuracy improved by 25%. large_cnn performed better at both 4 and 10 class classification than cnn, and the difference was more pronounced with 10 class. This is likely because the extra model size allowed for a better decision function to be learned.\n",
    "\n",
    "Although these results represent a huge performance increase, overall the models predictions are still quite unreliable. At 10 class classification the best test accuracy is only 0.5, therefore there is still significant room for improvement. There is also about a 30% difference in accuracy between the train and test accuracy results of these models, this indicates that their decision functions are not great at generalising to new data.\n",
    "\n",
    "Cnn and large_cnn were each tested at 40, 50, and 60 epochs. The models started overfitting at 60 epochs, with test accuracy dropping by approximately 1% in all tests compared to 50 epochs, while at 70 epochs test accuracy fell by approximately 3%. Models underfit at 40 epochs, getting approximately 1 % lower test accuracy than 50 epochs. Therefore 50 epochs was kept for the final results.\n",
    "\n",
    "These same models, cnn and large_cnn, were able to achive more than 90% accuracy on the 4 class hair colour classification problem of the major project. This is further evidence that dog breed classification is a more difficult task."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Large Data\n",
    "In this section, the effect of the size of the images will be explored. In the earlier deep learning tests, the images of ImageWoof were scaled down to 48 * 48 pixels. This would have resulted in a significant amount of information being lost from the original images, as demonstrated in the visualisation of the blocky images in the data preprocessing section. This time the images will be scaled to the size of 224 * 224, which will significantly increase the model training times, but potentially give better results. This section will investigate whether it's worth it to use the larger images for CNNs of this size.\n",
    "\n",
    "## Large Data Visualisation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Loading data...\n",
      "Finished loading data\n"
     ]
    }
   ],
   "source": [
    "img_dim = 224\n",
    "num_classes = 10\n",
    "x_train, y_train, x_test, y_test, encoder_classes = data_loader('./data/imagewoof', for_sklearn=False, \n",
    "                                                                img_dim=img_dim, num_classes=num_classes)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "English Foxhound\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_image(x_train[0], y_train[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Shih-Tzu\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_image(x_train[1000], y_train[1000])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Old English Sheepdog\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_image(x_train[2000], y_train[2000])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Visualisation Results\n",
    "The larger 224 \\* 224 images are much less pixelated than the 48 \\* 48 images, which will definitely help a human in correctly identifying a breed of dog. But will it make much of a difference to machine learning models?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 4 Class Classification\n",
    "cnn and large_cnn will be trained and tested on the reduced 4 class classification problem for 50 epochs, the same as the small data test."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [],
   "source": [
    "img_dim = 224\n",
    "num_classes = 4\n",
    "epochs = 50\n",
    "x_train, y_train, x_test, y_test, encoder_classes = data_loader('./data/imagewoof', for_sklearn=False, \n",
    "                                                                img_dim=img_dim, num_classes=num_classes)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [],
   "source": [
    "cnn(x_train, y_train, x_test, y_test, epochs=epochs, img_dim=img_dim, num_classes=num_classes)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Training model...  \n",
    "Train loss: 0.255  \n",
    "Train accuracy: 0.892  \n",
    "Test loss: 1.740  \n",
    "Test accuracy: 0.652"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [],
   "source": [
    "large_cnn(x_train, y_train, x_test, y_test, epochs=epochs, img_dim=img_dim, num_classes=num_classes)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Training model...  \n",
    "Train loss: 0.121  \n",
    "Train accuracy: 0.959  \n",
    "Test loss: 1.486  \n",
    "Test accuracy: 0.690"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 10 Class Classification\n",
    "cnn and large_cnn will be trained and tested on the full 10 class classification problem for 50 epochs, the same as the small data test."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [],
   "source": [
    "img_dim = 224\n",
    "num_classes = 10\n",
    "epochs = 50\n",
    "x_train, y_train, x_test, y_test, encoder_classes = data_loader('./data/imagewoof', for_sklearn=False, \n",
    "                                                                img_dim=img_dim, num_classes=num_classes)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [],
   "source": [
    "cnn(x_train, y_train, x_test, y_test, epochs=epochs, img_dim=img_dim, num_classes=num_classes)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Training model...  \n",
    "Train loss: 0.289  \n",
    "Train accuracy: 0.886  \n",
    "Test loss: 3.467  \n",
    "Test accuracy: 0.366"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [],
   "source": [
    "large_cnn(x_train, y_train, x_test, y_test, epochs=epochs, img_dim=img_dim, num_classes=num_classes)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Training model...  \n",
    "Train loss: 0.361  \n",
    "Train accuracy: 0.875  \n",
    "Test loss: 2.194  \n",
    "Test accuracy: 0.429"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Large Data Results\n",
    "Both cnn and large_cnn performed worse with the large 224 * 224 data than with the small 48 * 48 data. For 4 class classification, the drop in accuracy was around 3%, while for 10 classification there was a drop of about 8%. This result is somewhat counter-intuitive: the larger input images had more information so theoretically models should perform better on them. The likely reason why performance dropped was that cnn and large_cnn did not have large enough model capacities to learn from these significantly larger inputs. The fact that 10 class classification had a larger drop in accuracy may support this theory, as the decision function for 10 class classification is more complicated and requires a larger model capacity that 4 class. The transfer learning section will feature models with much higher capacities which should handle the large data well."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Transfer Learning\n",
    "In this section, transfer learning will be explored to see if the results of the deep learning section can be improved. Two huge pre-trained models, VGG Face and ResNet50, will be used to test transfer learning. These models are very deep, with VGG Face having 16 layers and ResNet50 having 50 layers. They have been pretrained with huge datasets such as imagenet, and that training would have taken very significant computational power to do. The idea is that some of the learning from the pre-training will be able to transfer over to our dog breed classification task as ImageWoof is a much smaller dataset than ImageNet. Most of the layers of these networks will be frozen with the pre-trained weights, and then will be trained a bit more using ImageWoof. These results will then be compared with small and medium CNN from the deep learning section. As VGG Face and ResNet50 were both trained with large image sizes, the large ImageWoof images from the previous section will be used for training.\n",
    "\n",
    "## VGG Face\n",
    "In this experiment, the [VGG Face](https://www.robots.ox.ac.uk/~vgg/software/vgg_face/) model will be used to test transfer learning. This code is based on a port of VGG face to Keras by [Sefik Ilkin Serengil](https://sefiks.com/2018/08/06/deep-face-recognition-with-keras/). The last three convolutional layers will be left trainable, with all earlier layers being frozen to their pre-trained weights. VGG Face is specifically trained on images of human faces, so it will be interesting to see if anything transfers to images of dogs. This same setup was used in the major project, which unfortunately had inferior results to the cnn and large_cnn models. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [],
   "source": [
    "def vgg_face(x_train, y_train, x_test, y_test, epochs, num_classes):\n",
    "    model = Sequential()\n",
    "    model.add(ZeroPadding2D((1, 1), input_shape=(224, 224, 3)))\n",
    "    model.add(Convolution2D(64, (3, 3), activation='relu', name='conv1_1'))\n",
    "    model.add(ZeroPadding2D((1, 1)))\n",
    "    model.add(Convolution2D(64, (3, 3), activation='relu', name='conv1_2'))\n",
    "    model.add(MaxPooling2D((2, 2), strides=(2, 2), name='pool1'))\n",
    "\n",
    "    model.add(ZeroPadding2D((1, 1)))\n",
    "    model.add(Convolution2D(128, (3, 3), activation='relu', name='conv2_1'))\n",
    "    model.add(ZeroPadding2D((1, 1)))\n",
    "    model.add(Convolution2D(128, (3, 3), activation='relu', name='conv2_2'))\n",
    "    model.add(MaxPooling2D((2, 2), strides=(2, 2), name='pool2'))\n",
    "\n",
    "    model.add(ZeroPadding2D((1, 1)))\n",
    "    model.add(Convolution2D(256, (3, 3), activation='relu', name='conv3_1'))\n",
    "    model.add(ZeroPadding2D((1, 1)))\n",
    "    model.add(Convolution2D(256, (3, 3), activation='relu', name='conv3_2'))\n",
    "    model.add(ZeroPadding2D((1, 1)))\n",
    "    model.add(Convolution2D(256, (3, 3), activation='relu', name='conv3_3'))\n",
    "    model.add(MaxPooling2D((2, 2), strides=(2, 2), name='pool3'))\n",
    "\n",
    "    model.add(ZeroPadding2D((1, 1)))\n",
    "    model.add(Convolution2D(512, (3, 3), activation='relu', name='conv4_1'))\n",
    "    model.add(ZeroPadding2D((1, 1)))\n",
    "    model.add(Convolution2D(512, (3, 3), activation='relu', name='conv4_2'))\n",
    "    model.add(ZeroPadding2D((1, 1)))\n",
    "    model.add(Convolution2D(512, (3, 3), activation='relu', name='conv4_3'))\n",
    "    model.add(MaxPooling2D((2, 2), strides=(2, 2), name='pool4'))\n",
    "\n",
    "    model.add(ZeroPadding2D((1, 1)))\n",
    "    model.add(Convolution2D(512, (3, 3), activation='relu', name='conv5_1'))\n",
    "    model.add(ZeroPadding2D((1, 1)))\n",
    "    model.add(Convolution2D(512, (3, 3), activation='relu', name='conv5_2'))\n",
    "    model.add(ZeroPadding2D((1, 1)))\n",
    "    model.add(Convolution2D(512, (3, 3), activation='relu', name='conv5_3'))\n",
    "    model.add(MaxPooling2D((2, 2), strides=(2, 2), name='pool5'))\n",
    "    # By default, layers beyond this are trainable\n",
    "    model.add(Convolution2D(4096, (7, 7), activation='relu', name='fc6'))\n",
    "    model.add(Dropout(0.5))\n",
    "    model.add(Convolution2D(4096, (1, 1), activation='relu', name='fc7'))\n",
    "    model.add(Dropout(0.5))\n",
    "    model.add(Convolution2D(2622, (1, 1), name='fc8'))\n",
    "    model.add(Flatten())\n",
    "    model.add(Activation('softmax'))\n",
    "\n",
    "    # pre-trained weights of vgg-face model.\n",
    "    # you can find it here: https://drive.google.com/file/d/1CPSeum3HpopfomUEK1gybeuIVoeJT_Eo/view?usp=sharing\n",
    "    # related blog post: https://sefiks.com/2018/08/06/deep-face-recognition-with-keras/\n",
    "    model.load_weights('data/vgg_face_weights.h5')\n",
    "\n",
    "    for layer in model.layers[:-7]:\n",
    "        layer.trainable = False\n",
    "\n",
    "    vgg_face_output = Sequential()\n",
    "    vgg_face_output = Convolution2D(num_classes, (1, 1), name='predictions')(model.layers[-4].output)\n",
    "    vgg_face_output = Flatten()(vgg_face_output)\n",
    "    vgg_face_output = Activation('softmax')(vgg_face_output)\n",
    "\n",
    "    vgg_face_model = Model(inputs=model.input, outputs=vgg_face_output)\n",
    "\n",
    "    vgg_face_model.compile(loss='categorical_crossentropy',\n",
    "                           optimizer=keras.optimizers.Adam(),\n",
    "                           # optimizer = sgd,\n",
    "                           metrics=['accuracy']\n",
    "                           )\n",
    "\n",
    "    vgg_face_model.fit(x_train, y_train, epochs=epochs, batch_size=32)\n",
    "    model.save_weights('./data/vgg_face_checkpoint')\n",
    "    score = vgg_face_model.evaluate(x_test, y_test, verbose=0)\n",
    "    print('Test loss:', score[0])\n",
    "    print('Test accuracy:', score[1])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 4 Class Classification\n",
    "VGG Face will be trained and tested on the reduced 4 class classification problem with 3, 5, and 10 epochs of training."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [],
   "source": [
    "img_dim = 224\n",
    "num_classes = 4\n",
    "x_train, y_train, x_test, y_test, encoder_classes = data_loader('./data/imagewoof', for_sklearn=False, \n",
    "                                                                img_dim=img_dim, num_classes=num_classes)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [],
   "source": [
    "epochs = 3\n",
    "vgg_face(x_train, y_train, x_test, y_test, epochs=epochs, img_dim=img_dim, num_classes=classes)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Training model...  \n",
    "Train loss: 0.244  \n",
    "Train accuracy: 0.910  \n",
    "Test loss: 1.120  \n",
    "Test accuracy: 0.700"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [],
   "source": [
    "epochs = 5\n",
    "vgg_face(x_train, y_train, x_test, y_test, epochs=epochs, img_dim=img_dim, num_classes=classes)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Training model...  \n",
    "Train loss: 0.093  \n",
    "Train accuracy: 0.965  \n",
    "Test loss: 1.272  \n",
    "Test accuracy: 0.716"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [],
   "source": [
    "epochs = 10\n",
    "vgg_face(x_train, y_train, x_test, y_test, epochs=epochs, img_dim=img_dim, num_classes=classes)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Training model...  \n",
    "Train loss: 0.045  \n",
    "Train accuracy: 0.986  \n",
    "Test loss: 1.88  \n",
    "Test accuracy: 0.710"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 10 Class Classification\n",
    "VGG Face will be trained and tested on the full 10 class classification problem with 3, 5, and 10 epochs of training."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [],
   "source": [
    "img_dim = 224\n",
    "num_classes = 10\n",
    "x_train, y_train, x_test, y_test, encoder_classes = data_loader('./data/imagewoof', for_sklearn=False, \n",
    "                                                                img_dim=img_dim, num_classes=num_classes)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [],
   "source": [
    "epochs = 3\n",
    "vgg_face(x_train, y_train, x_test, y_test, epochs=epochs, img_dim=img_dim, num_classes=classes)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Training model...  \n",
    "Train loss: 0.801  \n",
    "Train accuracy: 0.725  \n",
    "Test loss: 1.680  \n",
    "Test accuracy: 0.474"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [],
   "source": [
    "epochs = 5\n",
    "vgg_face(x_train, y_train, x_test, y_test, epochs=epochs, img_dim=img_dim, num_classes=classes)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Training model...  \n",
    "Train loss: 0.364  \n",
    "Train accuracy: 0.876  \n",
    "Test loss: 1.862  \n",
    "Test accuracy: 0.490"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [],
   "source": [
    "epochs = 10\n",
    "vgg_face(x_train, y_train, x_test, y_test, epochs=epochs, img_dim=img_dim, num_classes=classes)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Training model...  \n",
    "Train loss: 0.172  \n",
    "Train accuracy: 0.948  \n",
    "Test loss: 2.400  \n",
    "Test accuracy: 0.492"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### VGG Face Results\n",
    "For 4 class classification, transfer learning with VGG Face performed slightly better than cnn but slightly worse than large_cnn. For 10 class classification, transfer learning with VGG Face performed equally to large_cnn. These results indicate that, perhaps unsurprisingly, a model pre-trained on human faces does not transfer well to pictures of dogs! \n",
    "\n",
    "The ideal number of training epochs was found to be 5 epochs for 4 class classification and 10 epochs for 10 class classification.\n",
    "\n",
    "## ResNet50\n",
    "In this experiment, [ResNet50](https://arxiv.org/abs/1512.03385) will be used to test transfer learning. Unlike VGG Face, all layers will be frozen except the final layer in the model which is the predictions layer. This experiment is also a repeat of one in the major project, which unexpectedly had inferior results to cnn and large_cnn on the CelebA hair colour prediction task. Since this model was trained on ImageNet, and ImageWoof is a subset of ImageNet, the expectation is that this model will perform very well."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "def resnet50(x_train, y_train, x_test, y_test, epochs, img_dim, num_classes):\n",
    "    frozen_to = -1\n",
    "    input_shape = (img_dim, img_dim, 3)\n",
    "    original_model = keras.applications.ResNet50V2(weights='imagenet', input_shape=input_shape, include_top=False)\n",
    "    input_layer = original_model.input\n",
    "    intermediate_layer = GlobalAveragePooling2D()\n",
    "    intermediate_layer = intermediate_layer(original_model.layers[-1].output)\n",
    "    prediction_layer = Dense(num_classes, activation='softmax')\n",
    "    output_layer = prediction_layer(intermediate_layer)\n",
    "    model = Model(input_layer, output_layer)\n",
    "    for _, layer in enumerate(model.layers[:frozen_to]):\n",
    "        layer.trainable = False\n",
    "    for _, layer in enumerate(model.layers[frozen_to:]):\n",
    "        layer.trainable = True\n",
    "    model.compile(loss='categorical_crossentropy',\n",
    "                  optimizer='adam',\n",
    "                  metrics=['accuracy'])\n",
    "    model.fit(x_train, y_train,\n",
    "              batch_size=128,\n",
    "              epochs=epochs)\n",
    "    score = model.evaluate(x_test, y_test, verbose=0)\n",
    "    print('Test loss:', score[0])\n",
    "    print('Test accuracy:', score[1])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 4 Class Classification\n",
    "ResNet50 will be trained and tested on the reduced 4 class classification problem with 5, 10, and 12 epochs of training."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [],
   "source": [
    "img_dim = 224\n",
    "num_classes = 4\n",
    "x_train, y_train, x_test, y_test, encoder_classes = data_loader('./data/imagewoof', for_sklearn=False, \n",
    "                                                                img_dim=img_dim, num_classes=num_classes)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [],
   "source": [
    "epochs = 5\n",
    "resnet50(x_train, y_train, x_test, y_test, epochs=epochs, img_dim=img_dim, num_classes=classes)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Training model...  \n",
    "Train loss: 0.127  \n",
    "Train accuracy: 0.965  \n",
    "Test loss: 0.126  \n",
    "Test accuracy: 0.965"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [],
   "source": [
    "epochs = 10\n",
    "resnet50(x_train, y_train, x_test, y_test, epochs=epochs, img_dim=img_dim, num_classes=classes)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Training model...  \n",
    "Train loss: 0.07  \n",
    "Train accuracy: 0.985  \n",
    "Test loss: 0.135  \n",
    "Test accuracy: 0.968"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [],
   "source": [
    "epochs = 12\n",
    "resnet50(x_train, y_train, x_test, y_test, epochs=epochs, img_dim=img_dim, num_classes=classes)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Training model...  \n",
    "Train loss: 0.07  \n",
    "Train accuracy: 0.984  \n",
    "Test loss: 0.135  \n",
    "Test accuracy: 0.967"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 10 Class Classification\n",
    "ResNet50 will be trained and tested on the full 10 class classification problem with 5, 7, and 10 epochs of training."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [],
   "source": [
    "img_dim = 224\n",
    "num_classes = 10\n",
    "x_train, y_train, x_test, y_test, encoder_classes = data_loader('./data/imagewoof', for_sklearn=False, \n",
    "                                                                img_dim=img_dim, num_classes=num_classes)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [],
   "source": [
    "epochs = 5\n",
    "resnet50(x_train, y_train, x_test, y_test, epochs=epochs, img_dim=img_dim, num_classes=classes)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Training model...  \n",
    "Train loss: 0.305  \n",
    "Train accuracy: 0.907  \n",
    "Test loss: 0.435  \n",
    "Test accuracy: 0.897"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [],
   "source": [
    "epochs = 7\n",
    "resnet50(x_train, y_train, x_test, y_test, epochs=epochs, img_dim=img_dim, num_classes=classes)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Training model...  \n",
    "Train loss: 0.259  \n",
    "Train accuracy: 0.923  \n",
    "Test loss: 0.462  \n",
    "Test accuracy: 0.896"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [],
   "source": [
    "epochs = 10\n",
    "resnet50(x_train, y_train, x_test, y_test, epochs=epochs, img_dim=img_dim, num_classes=classes)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Training model...  \n",
    "Train loss: 0.209  \n",
    "Train accuracy: 0.942  \n",
    "Test loss: 0.492  \n",
    "Test accuracy: 0.896"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### ResNet50 Results\n",
    "Transfer learning with ResNet50 performed exceptionally well. For 4 class classification, ResNet50 achieved 97% test accuracy which was 25% better than large_cnn. For 10 class classification, ResNet achieved 90% test accuracy which was 40% better than large_cnn. This indicates that the huge capacity of ResNet50, plus the pre-trained model weights, performed very well on this task.\n",
    "\n",
    "These sort of results were expected on the hair colour classification on CelebA in the major project, but for some reason this identical setup performed worse than large_cnn on that task. \n",
    "\n",
    "The ideal number of training epochs was found to be between 5 and 10 for both 4 class and 10 class classification."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Discussion of Project Results\n",
    "This project gave some very interesting results. All of the models and techniques tested in this project (on the ImageWolf dataset) were identical to those used in the major project (on the CelebA dataset), but some of results were very different.\n",
    "\n",
    "For conventional machine learning, logistic regression performed the best in both projects. Comparing 4 class classification in both projects, logistic regression achieved 25% accuracy on dog breed classification compared to 82% on hair colour classification. This is a huge difference in performance, and indicates that the classification task in this project was much more difficult.\n",
    "\n",
    "For deep learning, large_cnn performed best in both projects. Comparing 4 class classification in both projects, large_cnn achieved 72% accuracy on dog breed classification compared with 92% accuracy on hair colour classification. Large_cnn boosted performance on dog breed classification by almost 50% compared with conventional results, while large_cnn on hair colour classification only improved results by 10% over convetional machine learning. This indicates that model capacity is more important in dog breed classification.\n",
    "\n",
    "For large data, large_cnn performed best in both projects. There is a big difference between the results in the two projects however: large data dropped performance on dog breed classification while it raised it slightly on hair colour classification. This indicates that a larger model capacity is required for using large data on the dog breed classification task.\n",
    "\n",
    "For transfer learning, we see the most interesting results. In the major project, VGG Face had better accuracy than conventional machine learning but worse accuracy than large_cnn. The model which I would have predicted to be the most promising, ResNet50, actually had the worst results of any of the models on hair colour classification. This is in stark contrast to the dog breed classification results where ResNet50 by far performed the best, achieving the impressive result of 97% accuracy. Both experiments had identical setups, with the dataset being the only changed variable.\n",
    "\n",
    "This means that overall, I was able to achieve a better result on 4 class dog breed classification than hair colour prediction. This was most surprising, considering that this task was very difficult for conventional machine learning and small convolutional neural networks. Since ResNet50 was trained on ImageNet, and ImageWoof is a subset of ImageNet, it is possible that some of the data from the ImageWoof test set was used to train ResNet50. This would explain how the test accuracy was so high. Further research would need to be done to see how well this transfer learning solution generalises to new data that ResNet50 definity was not trained on."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
